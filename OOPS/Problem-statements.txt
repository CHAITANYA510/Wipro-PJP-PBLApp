-------------------Classes and Objects----------------------

[Classes, Object, Constructors]
1.
Create a class Box that uses a parameterized constructor to
initialize the dimensions of a box.The dimensions of the Box are
width, height, depth. The class should have a method that can
return the volume of the box. Create an object of the Box class
and test the functionalities.

2.
Create a new class called Calculator with the following methods:
1. A static method called powerInt(int num1,int num2)
This method should return num1 to the power num2.
2. A static method called powerDouble(double num1,int num2).
This method should return num1 to the power num2.
3. Invoke both the methods and test the functionalities.
Hint: Use Math.pow(double,double) to calculate the power.



-------------------Encapsulation/Abstraction----------------------

[Encapsulation/Abstraction]
1. Create a class Author with the following information.
Member variables : name (String), email (String), and gender
(char)
Parameterized Constructor: To initialize the variables
Create a class Book with the following information.
Member variables : name (String), author (of the class Author you
have just created), price (double), and qtyInStock (int)
[Assumption: Each book will be written by exactly one Author]
Parameterized Constructor: To initialize the variables
Getters and Setters for all the member variables
In the main method, create a book object and print all details of
the book (including the author details)




-------------------Inheritance----------------------

[Inheritance]
1.
Create a class named ‘Animal’ which includes methods like eat()
and sleep().
Create a child class of Animal named ‘Bird’ and override the
parent class methods. Add a new method named fly().
Create an instance of Animal class and invoke the eat and sleep
methods using this object.
Create an instance of Bird class and invoke the eat, sleep and fly
methods using this object.

2.
Create a class called Person with a member variable name. Save it
in a file called Person.java
Create a class called Employee that will inherit the Person
class.The other data members of the Employee class are annual
salary (double), the year the employee started to work, and the
national insurance number which is a String.Save this in a file
called Employee.java
Your class should have the necessary constructors and
getter/setter methods.
Write another class called TestEmployee, containing a main method
to fully test your class definition.




-------------------Overriding/Polymorphism----------------------

[Overriding/Polymorphism]
1.
Create a base class Fruit with name ,taste and size as its
attributes.
Create a method called eat() which describes the name of the
fruit and its taste.
Inherit the same in 2 other classes Apple and Orange and override
the eat() method to represent each fruit taste.

2.
Write a program to create a class named shape. It should contain
2 methods, draw() and erase() that prints “Drawing Shape” and
“Erasing Shape” respectively.
For this class, create three sub classes, Circle, Triangle and
Square and each class should override the parent class functions
- draw () and erase ().
The draw() method should print “Drawing Circle”, “Drawing
Triangle” and “Drawing Square” respectively.
The erase() method should print “Erasing Circle”, “Erasing
Triangle” and “Erasing Square” respectively.
Create objects of Circle, Triangle and Square in the following
way and observe the polymorphic nature of the class by calling
draw() and erase() method using each object.
Shape c=new Circle();
Shape t=new Triangle();
Shape s=new Square();


-------------------String, StringBuffer----------------------

[String, StringBuffer]

1.
Write a Program to check whether a given String is
Palindrome or not. 

2.
Write a java program that will concatenate 2 strings and
return the result. The result should be in lowercase.
Note:If the concatenation creates a double-char, then one of
the characters need to be omitted.
Example1)
i/p:Sachin,Tendulkar
o/p:sachin tendulkar
Example2)
i/p:Mark,kate
o/p:markate

3.
Given a string, return a new string made of 'n' copies of
the first 2 chars of the original string where 'n' is the
length of the string.
Example1)
i/p:Wipro
o/p:WiWiWiWiWi

4.
Write a java program that will return the first half of the
string, if the length of the string is even. It should return
null for odd length string.
Example1)
i/p:TomCat
o/p:Tom
Example2)
i/p:Apron
o/p:null

5.
Write a java program that accepts a string and returns a new
string without the first and last character of the input
string.
Example1)
i/p:Suman
o/p:uma

6.
Given 2 strings, a and b, return a new string of the form
short+long+short, with the shorter string on the outside and
the longer string on the inside.
The strings will not be the same length, but they may be
empty (length 0).
If input is "hi" and "hello", then output will be
"hihellohi".

7.
Given a string, if the first or last chars are 'x', return
the string without those 'x' chars, otherwise return the
string unchanged.
If the input is "xHix", then output is "Hi".
If the input is "America", then the output is "America".

8.
Write a Java program that accepts a string (with * in it).
The program should return a new string in which the following
characters are removed-*,the characters that are to the left
and right of *
Example1)
i/p:ab*cd
o/p:ad

9.
Given two strings, a and b, print a new string which is made
of the following combination-first character of a, the first
character of b, second character of a, second character of b
and so on.
Any characters left, will go to the end of the result.
Example1)
i/p:Hello,World
o/p:HWeolrllod

10.
Given a string and an integer n, print a new string made of
n repetitions of the last n characters of the string.
You may assume that n is between 0 and the length of the
string, inclusive.
Example1)
i/p:Wipro,3
o/p:propropro



